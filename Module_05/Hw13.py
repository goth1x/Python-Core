"""
Теперь мы потренируемся писать полезные регулярные выражения. 
Напишите регулярное выражение для функции find_all_emails, 
которая будет в тексте (параметр text) находить все email и 
возвращать список полученных из текста совпадений.

В целях упрощения примем, что:

алфавит, используемый для названия email, — английский
префикс (все, что находится до символа @) начинается с латинской буквы 
и может содержать любое число или букву, включая нижнее подчеркивание 
и символ точки, состоит минимум из двух символов
суффикс письма (все, что находится после символа @) состоит только из 
букв английского алфавита, состоит из двух частей, разделенных точкой, 
и доменное имя верхнего уровня не может быть меньше двух символов 
(все, что после точки)
Данное регулярное выражение ни в коей мере не претендует на покрытие 
всех возможных вариантов email.

При выполнении этого задания мы рекомендуем использовать следующий 
сервис для проверок регулярных выражений regex101.

"""

import re

def find_all_emails(text):
    result = re.findall(r"[a-zA-Z]+[a-zA-Z0-9._]+@[a-zA-Z]+[.]+[a-zA-Z]{2,7}\b", text)
                        # r"[a-zA-Z]{1}[\w\.]+@[a-zA-z]+\.[a-zA-Z]{2,}"  ---> More correct
    return result

print(find_all_emails('here you are go to the max@gmail.com and wersacze@red.ti then sen mail to vagabond.next@rera.com.ua'))