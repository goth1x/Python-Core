"""
Разберем простую технику кодирования и декодирования на основе серий. Например, 
у нас есть список с повторяющимися наблюдениями какой-то величины, она может принимать 
значения X, Y или Z. Значения появляются в произвольном порядке и храним мы их в списке 
["X", "X", "X", "Z", "Z", "X", "X", "Y", "Y", "Y", "Z", "Z"] или строке "XXXZZXXYYYZZ".

За счет чего мы можем уменьшить объем хранимой информации? Сжатие можно достичь заменой 
группы повторяющихся значений на однократное значение и счетчик повторов: 
["X", 3, "Z", 2, "X", 2, "Y", 3, "Z", 2]

Напишите рекурсивную функцию decode для декодирования списка, закодированного этим способом. 
В качестве аргумента функция принимает закодированный список. Функция должна вернуть 
расшифрованный список элементов.

"""


# def decode(data):
#     decoded = []
#     for i, element in enumerate(data):
#         if i % 2 != 0:
#             continue
#         for x in range(data[i + 1]):
#             decoded.append(element)
#     return decoded


data = ["X", 3, "Z", 2, "X", 2, "Y", 3, "Z", 2]


def decode(data):
    decoded = []
    if len(data) == 0:
        return decoded
    x = data.pop(1)
    char = data.pop(0)
    for i in range(x):
        decoded.append(char)
    decoded.extend(decode(data))
    return decoded


print(decode(data))
